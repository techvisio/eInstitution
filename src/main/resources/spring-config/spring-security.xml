<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/*" access="hasRole('ROLE_USER')" />
	</http>

	<!-- <authentication-manager> <authentication-provider> <user-service> <user 
		name="mkyong" password="123456" authorities="ROLE_USER" /> </user-service> 
		</authentication-provider> </authentication-manager> -->

	<!-- <security:form-login login-page="/login.html" login-processing-url="/loginProcess" 
		default-target-url="/index.jsp" authentication-failure-url="/login.html?login_error=1" 
		/> <security:logout logout-url="/logout" logout-success-url="/logoutSuccess.html" 
		/> -->

	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select 
		name,password from user where name=? and status='A'" authorities-by-username-query="select 
		u1.username, u2.role from role u1, where user_id = ? and u1.username =?" 
		/> </security:authentication-provider> </security:authentication-manager> -->
	<authentication-manager>
		<authentication-provider user-service-ref="myAuthenticationProvider" >
			<!-- <password-encoder hash="bcrypt" />  -->   
		</authentication-provider>
	</authentication-manager>

</beans:beans>