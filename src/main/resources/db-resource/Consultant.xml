<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>

	<entry key="deleteConsultantDtlExclusion">
    <![CDATA[
      
Delete from admission_consultant_Dtl where File_No=:File_No and Consltant_Dtl_Id not in (:Consultant_Dtl_Id)

    ]]>

	</entry>
	<entry key="deleteConsultantPaymentDtlExclusion">
    <![CDATA[
      
Delete from Consultant_Payment_Detail where File_No=:File_No and Consltnt_Pymnt_Id not in (:Consltnt_Pymnt_Id)
    ]]>

	</entry>

	<entry key="dltCnsltntPymntDtlByConsltantDtlId">
    <![CDATA[
      
Delete from Consultant_Payment_Detail where File_No=:File_No and Consltant_Dtl_Id not in (:Consultant_Dtl_Id)  
    ]]>

	</entry>

	<entry key="deleteConsultantPaymentCriteriaExclusion">
    <![CDATA[
      
Delete from consultant_payment_criteria where File_No=:File_No and Pymnt_Critria_Id not in (:Pymnt_Critria_Id)

   ]]>

	</entry>

	<entry key="dltCnsltantPymntCriteriaByConsltantDtlId">
    <![CDATA[
      
Delete from consultant_payment_criteria where File_No=:File_No and Consltant_Dtl_Id not in (:Consultant_Dtl_Id)

   ]]>

	</entry>


	<entry key="getCosultantBySearchCriteria">

<![CDATA[
SELECT

Consultant_Id,
Name, 
Primary_Contact_No, 
Secondary_contact_No, 
Address, 
Email_Id 

from  consultant_Master WHERE Consultant_Id=IFNULL(:Consultant_Id,Consultant_Id) and ifnull(Email_Id,'-1')=ifnull(:Email_Id,ifnull(Email_Id,'-1')) and ifnull(Primary_Contact_No,'-1')=ifnull(:Primary_Contact_No,ifnull(Primary_Contact_No,'-1')) and ifnull(Secondary_Contact_No,'-1')=ifnull(:Secondary_Contact_No,ifnull(Secondary_Contact_No,'-1')) and Name like :Name;    


]]>

	</entry>

	<entry key="getStudentDtlForConsultant">
    <![CDATA[
SELECT
s.Registration_No,
s.File_No,
sb.Enroll_No,
sb.Uni_Enroll_No,
sb.First_Name,
sb.Last_Name,
sb.Father_Name,
sb.Gender,
sb.DOB,
sb.Email_Id,
sb.Category_Id,
s.Course_Id,
s.Branch_Id,
sb.created_On,
sb.Updated_On,   
sb.Quota_Id,
s.Academic_Year,
sb.Semester,
sb.Batch_Id,
sb.Session_Id,
sb.Shift_Id,
sb.Centre_Id,
sb.Section_Id,
sb.Is_Lateral
from  student_detail s JOIN student_basic sb
ON s.File_No = sb.FILE_NO
     
WHERE s.Registration_No=IFNULL(:Registration_No,s.Registration_No) and s.File_No = IFNULL(:File_No,s.File_No) and s.Course_Id = IFNULL(:Course_Id,s.Course_Id) and s.Branch_Id = IFNULL(:Branch_Id,s.Branch_Id) and ifnull(sb.Email_Id,'-1')=ifnull(:Email_Id,ifnull(sb.Email_Id,'-1')) and ifnull(sb.Enroll_No,'-1')=ifnull(:Enroll_No,ifnull(sb.Enroll_No,'-1')) and ifnull(sb.Uni_Enroll_No,'-1')=ifnull(:Uni_Enroll_No,ifnull(sb.Uni_Enroll_No,'-1')) and ifnull(sb.Self_Mobile_No,'-1') = ifnull(:Self_Mobile_No,ifnull(sb.Self_Mobile_No,'-1')) and sb.First_Name like :First_Name;    
    
    ]]>

	</entry>

</properties>

