<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>

	<entry key="getConsultantById">
    <![CDATA[
      
Select 

	Id, 
	Name, 
	Primary_Contact_No, 
	Secondary_contact_No, 
	Address, 
	Email_Id       
   
 from ConsultantMaster where Id=:Id;
    ]]>

	</entry>

	<entry key="upsertConsultant">
    <![CDATA[
      
Insert into ConsultantMaster

	(Id,
	Name, 
	Primary_Contact_No, 
	Secondary_contact_No, 
	Address, 
	Email_Id) values
	       
   (:Id,
   :Name, 
   :Primary_Contact_No, 
   :Secondary_contact_No, 
   :Address, 
   :Email_Id)
   
   on duplicate key update
   
  	Name=:Name, 
	Primary_Contact_No=:Primary_Contact_No, 
	Secondary_contact_No=:Secondary_contact_No, 
	Address=:Address, 
	Email_Id=:Email_Id ; 
   
    ]]>

	</entry>
	
	<entry key="deleteConsultant">
    <![CDATA[
      
Delete from ConsultantMaster where Id=:Id;
    ]]>

	</entry>

	<entry key="getConsultantDtlByFileNo">
    <![CDATA[
      
Select

	File_No, 
	Consultant_Id, 
	Consultancy_Agreed, 
	Payment_Mode, 
	Amount_To_Pay, 
	Due_Date,
	Remarks

from ConsultantDetail where File_No=:File_No ;
    ]]>

	</entry>

	<entry key="upsertConsultantDtl">
    <![CDATA[
      
Insert into ConsultantDetail

   (File_No, 
	Consultant_Id, 
   Consultancy_Agreed, 
   Payment_Mode, 
   Amount_To_Pay, 
   Due_Date,
   Remarks) values
   
 (:File_No, 
 :Consultant_Id, 
 :Consultancy_Agreed, 
 :Payment_Mode, 
 :Amount_To_Pay, 
 :Due_Date,
 :Remarks)

on duplicate key update

    Consultancy_Agreed=:Consultancy_Agreed, 
    Payment_Mode=:Payment_Mode, 
    Amount_To_Pay=:Amount_To_Pay, 
    Due_Date=:Due_Date,
    Remarks = :Remarks
    ]]>

	</entry>

	
	<entry key="deleteConsultantDtlExclusion">
    <![CDATA[
      
Delete from ConsultantDetail where File_No=:File_No and Consultant_Dtl_Id not in (:Consultant_Dtl_Id);

    ]]>

	</entry>

	<entry key="getConsultantPaymentDtlByFileNoAndConsultantId">
    <![CDATA[
      
Select

	Amount, 
	Pay_Date, 
	File_No,
	Consultant_Id
   
from ConsultantPaymentDetail where File_No=:File_No and Consultant_Id=:Consultant_Id;
    ]]>

	</entry>

	<entry key="addConsultantPaymentDtl">
    <![CDATA[
      
Insert into ConsultantPaymentDetail

      (File_No,
      Consultant_Id,
      Amount, 
      Pay_Date) values 
      
     (:File_No,
     :Consultant_Id,
     :Amount, 
     :Pay_Date);
    ]]>

	</entry>

	<entry key="updateConsultantPaymentDtl">
    <![CDATA[
      
Update ConsultantPaymentDetail set

      
      Amount=:Amount, 
      Pay_Date=:Pay_Date
      
   
where File_No=:File_No and Consultant_Id=:Consultant_Id;  
    ]]>

	</entry>

	<entry key="deleteConsultantPaymentDtlExclusion">
    <![CDATA[
      
Delete from ConsultantPaymentDetail where File_No=:File_No and Consltnt_Pymnt_Id not in (:Consltnt_Pymnt_Id);  
    ]]>

	</entry>

<entry key="dltCnsltntPymntDtlByConsltantDtlId">
    <![CDATA[
      
Delete from ConsultantPaymentDetail where File_No=:File_No and Consltant_Dtl_Id not in (:Consltant_Dtl_Id);  
    ]]>

	</entry>

<entry key="deleteConsultantPaymentDtl">
    <![CDATA[
      
Delete from ConsultantPaymentDetail where File_No=:File_No and Consultant_Id=:Consultant_Id;  
    ]]>

	</entry>

	<entry key="getConsultantPaymentCriteria">
    <![CDATA[
      
SELECT 

File_No, Consultant_Id, Fee_Received, Amount_To_Be_Paid, Fee_Due_Date, Approved, Paid, Triggered 

FROM consultantpaymentcriteria where File_No=:File_No and Consultant_Id=:Consultant_Id; 
    ]]>

	</entry>

	<entry key="addConsultantPaymentCriteria">
    <![CDATA[
      
Insert into  consultantpaymentcriteria

(File_No, 
Consultant_Id, 
Fee_Received, 
Amount_To_Be_Paid, 
Fee_Due_Date, 
Approved, 
Paid, 
Triggered) values

(:File_No, 
:Consultant_Id, 
:Fee_Received, 
:Amount_To_Be_Paid, 
:Fee_Due_Date, 
:Approved, 
:Paid, 
:Triggered);

   ]]>

	</entry>

	<entry key="deleteConsultantPaymentCriteriaExclusion">
    <![CDATA[
      
Delete from consultantpaymentcriteria where File_No=:File_No and Pymnt_Critria_Id not in (:Pymnt_Critria_Id);

   ]]>

	</entry>

<entry key="dltCnsltantPymntCriteriaByConsltantDtlId">
    <![CDATA[
      
Delete from consultantpaymentcriteria where File_No=:File_No and Consltant_Dtl_Id not in (:Consltant_Dtl_Id);

   ]]>

	</entry>

	
	<entry key="deleteConsultantPaymentCriteria">
    <![CDATA[
      
Delete from consultantpaymentcriteria where File_No=:File_No and Consultant_Id=:Consultant_Id;

   ]]>

	</entry>
	
<entry key="getCosultantBySearchCriteria">

<![CDATA[
SELECT

Id,
Name, 
Primary_Contact_No, 
Secondary_contact_No, 
Address, 
Email_Id 

from  consultantMaster WHERE Id=IFNULL(:Id,Id) and ifnull(Email_Id,'-1')=ifnull(:Email_Id,ifnull(Email_Id,'-1')) and ifnull(Primary_Contact_No,'-1')=ifnull(:Primary_Contact_No,ifnull(Primary_Contact_No,'-1')) and ifnull(Secondary_Contact_No,'-1')=ifnull(:Secondary_Contact_No,ifnull(Secondary_Contact_No,'-1')) and Name like :Name;    


]]>

</entry>

<entry key="getStudentDtlForConsultant">
    <![CDATA[
SELECT
s.Registration_No,
s.File_No,
s.Enroll_No,
s.Uni_Enroll_No,
s.First_Name,
s.Last_Name,
s.Father_Name,
s.Gender,
s.DOB,
s.Email_Id,
s.Category_Id,
s.Course_Id,
s.Branch_Id,
s.Created_On,
s.Updated_On,   
s.Quota_Code,
s.Academic_Year,
s.Semester,
s.Lateral,
s.Batch_Id,
s.Session_Id,
s.Shift_Id,
s.Centre_Id,
s.Section_Id,
s.Lateral
from  studentdetail s  WHERE s.Registration_No=IFNULL(:Registration_No,s.Registration_No) and Course_Id = IFNULL(:Course_Id,Course_Id) and Branch_Id = IFNULL(:Branch_Id,Branch_Id) and ifnull(Email_Id,'-1')=ifnull(:Email_Id,ifnull(Email_Id,'-1')) and ifnull(Enroll_No,'-1')=ifnull(:Enroll_No,ifnull(Enroll_No,'-1')) and ifnull(Uni_Enroll_No,'-1')=ifnull(:Uni_Enroll_No,ifnull(Uni_Enroll_No,'-1')) and ifnull(Self_Mobile_No,'-1') = ifnull(:Self_Mobile_No,ifnull(Self_Mobile_No,'-1')) and First_Name like :First_Name;    
    ]]>

	</entry>

</properties>

