<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	
<entry key="getConsultantReport">
    <![CDATA[
    SELECT
	constMtr.`Name`,
	constMtr.Primary_Contact_No,
constMtr.Secondary_contact_No,
constMtr.Email_Id,
constMtr.Id,
stddtl.File_No,
stddtl.First_Name,
stddtl.Last_Name,
stddtl.Father_Name,
csrmtr.Course,
qtMtr.Description,
brmtr.Branch,
stddtl.Fee_Paid,
stddtl.DOB,
stddtl.Gender,
stddtl.Self_Mobile_No
FROM
	consultantdetail contdtl
INNER JOIN consultantmaster constMtr ON contdtl.Consultant_Id = constMtr.Id
inner join studentdetail stddtl on contdtl.File_No=stddtl.File_No
inner join quotacodemaster qtMtr on stddtl.Quota_Code=qtMtr.Id
inner join coursemaster csrmtr on stddtl.Course_Id=csrmtr.Id
inner join coursebranchmaster brmtr on stddtl.Branch_Id=brmtr.Id
inner join castecategorymaster catmtr on stddtl.Category_Id=catmtr.Id
]]>	
	</entry>


<entry key="getEnquiryReport">
    <![CDATA[
select 
	en.Inquiry_Id,
	en.Name,
	en.Father_Name,
	en.Contact_No,
	en.Application_Status,
	en.Created_By,
	en.created_on,
	en.Updated_By,
	en.updated_on,
	cm.Course,
	bm.Branch,
	en.Remarks,
	en.Email_Id

from admissioninquiry en join coursemaster cm on en.Course_Id = cm.Id
join coursebranchmaster bm on en.Branch_Id = bm.Id
where  en.created_on >= :date_From  and en.created_on <= :date_To;
]]>	
	</entry>
	
<entry key="getAdmissionReport">
    <![CDATA[
Select 
sd.Registration_No,
sd.First_Name,
sd.Last_Name,
sd.Father_Name,
sd.Gender,
sd.Self_Mobile_No,
sd.Email_Id,
cm.Course,
bm.Branch,
qm.code,
sd.Created_By,
sd.created_on,
sd.Referred_By,
sd.Application_Status,
sd.Remarks,
ifnull(dis.discount_Amount,0) discount_Amount,
ifnull(dep.Fee_deposite,0) Fee_deposite,
ifnull(cons.consultant_payment,0) consultant_payment,
cons.Name consultant_name,
cons.remarks consultantRemarks
FROM studentdetail sd  join quotacodemaster qm on sd.Quota_Code=qm.Id join coursemaster cm on sd.Course_Id = cm.Id
 join coursebranchmaster bm on sd.Branch_Id = bm.Id
 left join 
 (select sd.file_no,sum(ifnull(disc.amount,0)) discount_Amount from studentdetail sd left join feetransactioncredit disc on disc.File_No = sd.File_No
and sd.Batch_Id = disc.Batch_Id 
and sd.Session_Id = disc.Session_Id left join feediscountheadmaster disH ON disH.Head_Id = disc.Component_Id
where ifnull(disH.Transaction_Type,'W') = 'W' group by sd.File_No) dis on sd.File_No = dis.File_No
left join
(select sd.file_no,sum(ifnull(depo.amount,0)) Fee_deposite from studentdetail sd left join feetransactioncredit depo on depo.File_No = sd.File_No
and sd.Batch_Id = depo.Batch_Id 
and sd.Session_Id = depo.Session_Id left join feediscountheadmaster depH ON depH.Head_Id = depo.Component_Id
where ifnull(depH.Transaction_Type,'C') = 'C' group by sd.File_No) dep on sd.File_No = dep.File_No
left join 
(select sd.file_no,consM.Name,consD.remarks,sum(ifnull(conp.amount,0)) consultant_payment from studentdetail sd left join consultantdetail consD on sd.File_No = consD.File_No
left join consultantmaster consM on consD.Consultant_Id = consM.Id
left join consultantpaymentdetail conP on consD.File_No = conP.File_No and consD.Consultant_Id=conP.Consultant_Id
group by sd.File_No,consM.Id
) cons on sd.File_No = cons.File_No
and DATE(sd.created_on) >=  :date_From and DATE(sd.created_on) <= :date_To;

]]>	
	</entry>
	
	
</properties>